/* IDCW_DEV_CMD */

/* Device commands */

/* Request status */
dcl SOCKETDEV_request_status init (0) fixed bin;

/* socket() */
dcl SOCKETDEV_socket init (1) fixed bin;

/* bind() */
dcl SOCKETDEV_bind init (2) fixed bin;

/* T&D */
dcl SOCKETDEV_test init(3) fixed bin;
 
/* gethostbyname() */
dcl SOCKETDEV_gethostbyname init(4) fixed bin;

/* listen() */
dcl SOCKETDEV_listen init (5) fixed bin;

/* accept() */
dcl SOCKETDEV_accept init (6) fixed bin;

/* accept() */
dcl SOCKETDEV_close init (7) fixed bin;

/* accept() */
dcl SOCKETDEV_read init (8) fixed bin;




/* Data block for socket() call */
dcl 1 SOCKETDEV_socket_data aligned,
      2 domain fixed bin,
      2 type fixed bin,
      2 protocol fixed bin;
      2 fd fixed bin;
      2 errno char(8);

/* Expecting tally to be 6 */
/* domain, type and protocol are from the API parameters */
/* fd, errno are the values returned by the host socket() call */

/* Data block for bind() call */
dcl 1 SOCKETDEV_bind_data aligned,
      2 socket fixed bin,
      2 sockaddr_in,
        3 sin_family fixed bin,
        3 sin_port fixed uns bin (16),
        3 sin_addr,
          4 octets (4) fixed bin(8) unsigned unal,
      2 errno char(8);

/* Expecting tally to be 5 */
/* sockaddr is from the API parameter */
/* errno, errno are the values returned by the host socket() call */

/* Data block for gethostbyname() call */

dcl 1 SOCKETDEV_gethostbyname_data aligned,
      2 name char varying (256),
      3 addr fixed uns bin (32),
      3 errno char(8);

/* Tally 68. */
/* name is the hostname to be looked up */
/* addr is the returned IPV4 address */
/* errno is the returned code: 0 for success, h_errno otherwise */

/* Data block for listen() call */

dcl 1 SOCKETDEV_listen_data aligned,
      2 sockfd fixed bin,
      3 backlog fixed bin,
      2 rc fixed bin;
      2 errno char(8);

/* Tally 5 */
/* In: */
/*   sockfd */
/*   backlog */
/* Out: */
/*   fd */
/*   errno */

/* Data block for accept() call */

dcl 1 SOCKETDEV_accept_data aligned,
      2 sockfd fixed bin,
      2 rc fixed bin,
      2 sockaddr_in,
        3 sin_family fixed bin,
        3 sin_port fixed uns bin (16),
        3 sin_addr,
          4 octets (4) fixed bin(8) unsigned unal,
      2 errno char(8);

/* Tally 7 */
/* In: */
/*  sockfd */
/* Out: */
/*  rc */
/*  sockaddr_in */
/*  errno */

/* Data block for close() call */

dcl 1 SOCKETDEV_close_data aligned,
      2 sockfd fixed bin,
      2 rc fixed bin;
      2 errno char(8);


/* Tally 4 */
/* In: */
/*  sockfd */
/* Out: */
/*  rc */
/*  errno */

/* Data  block for read() call */

dcl 1 SOCKETDEV_read_data8 aligned,
      2 sockfd fixed bin,
      2 count  fixed bin, /* buffer size */
      2 rc     fixed bin,
      2 errno  char(8),
      2 buffer char (0 refer (SOCKETDEV_read_data9.cont);

/* Tally >= 5 */
/* In: */
/*   sockfd */
/*   count */
/* Out: */
/*   rc */
/*   buffer */


/*   buffer */
/* 

